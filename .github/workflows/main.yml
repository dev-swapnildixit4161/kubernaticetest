name: Build and Deploy to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io/dev-swapnildixit4161/my-app
  IMAGE_NAME: my-app
  AKS_CLUSTER: demo
  AKS_NAMESPACE: default

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh

      - name: Log in to GitHub Artifact Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login "${{ env.REGISTRY }}" -u dev-swapnildixit4161 --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t "${{ env.REGISTRY }}:${{ github.sha }}" .
          docker push "${{ env.REGISTRY }}:${{ github.sha }}"

      - name: Deploy to AKS
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: demo
          resource-group: azure-demo
#        run: |
#          az aks set-context --name ${{ env.AKS_CLUSTER }} --resource-group azure-demo
#          az aks get-credentials --name ${{ env.AKS_CLUSTER }} --resource-group azure-demo --overwrite-existing


      - name: List Manifests Directory
        run: ls manifests

      - name: Apply Kubernetes manifest
        run: |
          kubectl apply -f manifests/deployment.yml --namespace ${{ env.AKS_NAMESPACE }}
          kubectl apply -f manifests/service.yml --namespace ${{ env.AKS_NAMESPACE }}
      
      
          
